_D=$(absolute_dir $(dirname "${BASH_SOURCE[0]}"))
TEST_CONF=$_D/test-config-files


export ALL_USER_FILTER="objectclass=eduPerson"
export USERNAME_ATTRIBUTE=uid

#
# This function is to output (to stdout) what log4j.properties should be
# installed in the api/conf directory
function output_log4j_properties()
{
  cat $TEST_CONF/log4j.properties
  if [ -n "${SQL_DEBUGGING:-}" ]; then 
    cat $TEST_CONF/log4j-sql-debugging.properties
  fi
}


#
# This function runs at the beginning of the test
function test_is_starting() 
{
  # Run pre_test which tests can easily override since it's usually empty
  pre_test

  test_step "Dumping ldap data: BEFORE"
  . get_ldap_properties_from_loader_properties

  if [ ${SNAPSHOT_LDAP:-yes} = yes ]; then
    $DOCKER_COMPOSE_CMD exec -T grouper-daemon bash -c "myldapsearch -b "$LDAP_USER_BASE_DN" objectclass=* | unldif" > $T/ldap.before
    $DOCKER_COMPOSE_CMD exec -T grouper-daemon bash -c "myldapsearch -b "$LDAP_GROUP_BASE_DN" objectclass=* | unldif" >> $T/ldap.before
  fi

  if [ -n "${GSH_RAW_OUTPUT:-}" ]; then
    run_in_grouper_daemon touch /gsh-raw-output
  fi

}

# This function is where tests should define anything they want to happen before the test starts
function pre_test()
{
  # just something so function is not empty
  local x
}

# This function is where tests should define anything they want to happen after the test starts
# NOTE: This gets run even when the test is unsuccessful and should not change anything that
# is useful for diagnosis of the failure
function post_test()
{
  # just something so function is not empty
  local x
}


function validate_provisioning()
{
  echo "NO VALIDATION DONE BY DEFAULT"
  echo "NO VALIDATION DONE BY DEFAULT"
  echo "NO VALIDATION DONE BY DEFAULT"
  echo "NO VALIDATION DONE BY DEFAULT"
}


function test_is_ending()
{
  if [ -r $T/ldap.before ]; then
    test_step "Dumping ldap data: AFTER"
    $DOCKER_COMPOSE_CMD exec -T grouper-daemon bash -c "myldapsearch -b "$LDAP_USER_BASE_DN" objectclass=* | unldif" > $T/ldap.after
    $DOCKER_COMPOSE_CMD exec -T grouper-daemon bash -c "myldapsearch -b "$LDAP_GROUP_BASE_DN" objectclass=* | unldif" >> $T/ldap.after

    test_step "Comparing ldap data"
    ls -l $T/ldap.before $T/ldap.after

    (diff $T/ldap.before $T/ldap.after | sed 's/^/LDAP CHANGES: /') || true
    test_step_done
  else
    echo "Ldap data not saved at beginning of test"
  fi

  post_test
}

function add_full_sync_starter() {
  local provisioner="${1:-pspng1}"
  echo "otherJob.${provisioner}_full.class = edu.internet2.middleware.grouper.pspng.FullSyncStarter" >> "$GROUPER_CONFIG_DIR/grouper-loader.properties"
  echo "otherJob.${provisioner}_full.quartzCron = */5 * * * * ?" >> "$GROUPER_CONFIG_DIR/grouper-loader.properties"
}
